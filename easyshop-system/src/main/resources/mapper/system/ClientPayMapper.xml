<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.easyshop.system.mapper.ClientPayMapper">
    
    <resultMap type="ClientPay" id="ClientPayResult">
        <result property="payId"    column="pay_id"    />
        <result property="paySn"    column="pay_sn"    />
        <result property="payMan"    column="pay_man"    />
        <result property="payDate"    column="pay_date"    />
        <result property="payAmount"    column="pay_amount"    />
        <result property="payType"    column="pay_type"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="deptId"    column="dept_id"    />
    </resultMap>
	
	<sql id="selectClientPayVo">
        select pay_id, pay_sn, pay_man, pay_date, pay_amount, pay_type, create_by, create_time,dept_id from client_pay
    </sql>
	
    <select id="selectClientPayList" parameterType="ClientPay" resultMap="ClientPayResult">
        <include refid="selectClientPayVo"/>
        <where>  
            <if test="payId != null  and payId != '' "> and pay_id = #{payId}</if>
             <if test="paySn != null  and paySn != '' "> and pay_sn = #{paySn}</if>
             <if test="payMan != null  and payMan != '' "> and pay_man = #{payMan}</if>
             <if test="payDate != null "> and pay_date = #{payDate}</if>
             <if test="payAmount != null "> and pay_amount = #{payAmount}</if>
             <if test="payType != null "> and pay_type = #{payType}</if>
             <if test="createBy != null  and createBy != '' "> and create_by = #{createBy}</if>
             <if test="createTime != null "> and create_time = #{createTime}</if>
             <if test="deptId != null "> and dept_id = #{deptId}</if>
         </where>
    </select>
    
    <select id="selectClientPayById" parameterType="String" resultMap="ClientPayResult">
        <include refid="selectClientPayVo"/>
        where pay_id = #{payId}
    </select>
        
    <insert id="insertClientPay" parameterType="ClientPay">
        insert into client_pay
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="payId != null  and payId != ''  ">pay_id,</if>
			<if test="paySn != null  and paySn != ''  ">pay_sn,</if>
			<if test="payMan != null  and payMan != ''  ">pay_man,</if>
			<if test="payDate != null  ">pay_date,</if>
			<if test="payAmount != null  ">pay_amount,</if>
			<if test="payType != null  ">pay_type,</if>
			<if test="deptId != null  ">dept_id,</if>
			<if test="createBy != null  and createBy != ''  ">create_by,</if>
			create_time
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="payId != null  and payId != ''  ">#{payId},</if>
			<if test="paySn != null  and paySn != ''  ">#{paySn},</if>
			<if test="payMan != null  and payMan != ''  ">#{payMan},</if>
			<if test="payDate != null  ">#{payDate},</if>
			<if test="payAmount != null  ">#{payAmount},</if>
			<if test="payType != null  ">#{payType},</if>
			<if test="deptId != null  ">#{deptId},</if>
			<if test="createBy != null  and createBy != ''  ">#{createBy},</if>
			now()
         </trim>
    </insert>
	 
    <update id="updateClientPay" parameterType="ClientPay">
        update client_pay
        <trim prefix="SET" suffixOverrides=",">
            <if test="paySn != null  and paySn != ''  ">pay_sn = #{paySn},</if>
            <if test="payMan != null  and payMan != ''  ">pay_man = #{payMan},</if>
            <if test="payDate != null  ">pay_date = #{payDate},</if>
            <if test="payAmount != null  ">pay_amount = #{payAmount},</if>
            <if test="payType != null  ">pay_type = #{payType},</if>
            <if test="deptId != null  and deptId != ''  ">dept_id = #{deptId},</if>
        </trim>
        where pay_id = #{payId}
    </update>

	<delete id="deleteClientPayById" parameterType="String">
        delete from client_pay where pay_id = #{payId}
    </delete>
	
    <delete id="deleteClientPayByIds" parameterType="String">
        delete from client_pay where pay_id in 
        <foreach item="payId" collection="array" open="(" separator="," close=")">
            #{payId}
        </foreach>
    </delete>
    
</mapper>