<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.easyshop.system.mapper.ShopOrderItemMapper">
    
    <resultMap type="ShopOrderItem" id="ShopOrderItemResult">
        <result property="orderItemId"    column="order_item_id"    />
        <result property="orderId"    column="order_id"    />
        <result property="shopItemId"    column="shop_item_id"    />
        <result property="shopItemName"    column="shop_item_name"    />
        <result property="itemNum"    column="item_num"    />
        <result property="itemPrice"    column="item_price"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
    </resultMap>
	
	<sql id="selectShopOrderItemVo">
        select order_item_id, order_id, shop_item_id, shop_item_name, item_num, item_price, create_by, create_time from shop_order_item
    </sql>
	
    <select id="selectShopOrderItemList" parameterType="ShopOrderItem" resultMap="ShopOrderItemResult">
        <include refid="selectShopOrderItemVo"/>
        <where>  
            <if test="orderItemId != null  and orderItemId != '' "> and order_item_id = #{orderItemId}</if>
             <if test="orderId != null  and orderId != '' "> and order_id = #{orderId}</if>
             <if test="shopItemId != null  and shopItemId != '' "> and shop_item_id = #{shopItemId}</if>
             <if test="itemNum != null "> and item_num = #{itemNum}</if>
             <if test="itemPrice != null "> and item_price = #{itemPrice}</if>
             <if test="createBy != null  and createBy != '' "> and create_by = #{createBy}</if>
             <if test="createTime != null "> and create_time = #{createTime}</if>
         </where>
    </select>
    
    <select id="selectShopOrderItemById" parameterType="String" resultMap="ShopOrderItemResult">
        <include refid="selectShopOrderItemVo"/>
        where order_item_id = #{orderItemId}
    </select>
        
    <insert id="insertShopOrderItem" parameterType="ShopOrderItem">
        insert into shop_order_item
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="orderItemId != null  and orderItemId != ''  ">order_item_id,</if>
			<if test="orderId != null  and orderId != ''  ">order_id,</if>
			<if test="shopItemId != null  and shopItemId != ''  ">shop_item_id,</if>
			<if test="shopItemName != null  and shopItemName != ''  ">shop_item_name,</if>
			<if test="itemNum != null  ">item_num,</if>
			<if test="itemPrice != null  ">item_price,</if>
			<if test="createBy != null  and createBy != ''  ">create_by,</if>
			create_time
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="orderItemId != null  and orderItemId != ''  ">#{orderItemId},</if>
			<if test="orderId != null  and orderId != ''  ">#{orderId},</if>
			<if test="shopItemId != null  and shopItemId != ''  ">#{shopItemId},</if>
			<if test="shopItemName != null  and shopItemName != ''  ">#{shopItemName},</if>
			<if test="itemNum != null  ">#{itemNum},</if>
			<if test="itemPrice != null  ">#{itemPrice},</if>
			<if test="createBy != null  and createBy != ''  ">#{createBy},</if>
			now()
         </trim>
    </insert>
	 
    <update id="updateShopOrderItem" parameterType="ShopOrderItem">
        update shop_order_item
        <trim prefix="SET" suffixOverrides=",">
            <if test="orderId != null  and orderId != ''  ">order_id = #{orderId},</if>
            <if test="shopItemId != null  and shopItemId != ''  ">shop_item_id = #{shopItemId},</if>
            <if test="shopItemName != null  and shopItemName != ''  ">shop_item_name = #{shopItemName},</if>
            <if test="itemNum != null  ">item_num = #{itemNum},</if>
            <if test="itemPrice != null  ">item_price = #{itemPrice},</if>
            <if test="createBy != null  and createBy != ''  ">create_by = #{createBy},</if>
            <if test="createTime != null  ">create_time = #{createTime},</if>
        </trim>
        where order_item_id = #{orderItemId}
    </update>

	<delete id="deleteShopOrderItemById" parameterType="String">
        delete from shop_order_item where order_item_id = #{orderItemId}
    </delete>

	<delete id="deleteShopOrderItemByOrderId" parameterType="String">
        delete from shop_order_item where order_id = #{orderId}
    </delete>
	
    <delete id="deleteShopOrderItemByIds" parameterType="String">
        delete from shop_order_item where order_item_id in 
        <foreach item="orderItemId" collection="array" open="(" separator="," close=")">
            #{orderItemId}
        </foreach>
    </delete>
    
</mapper>